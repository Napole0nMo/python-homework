1.4.2 代码文件方式
  可以用记事本、集成开发工具等编写源代码，然后将源程序保存为".py"文件。
1.4.3 代码文件打开
1.4.4 代码风格
  1.代码缩进与语句块
    Python源程序依赖代码段的缩进来实现程序代码逻辑上的归属。
  2.适当的空行
  3.适当的注释
1.5 Python集成开发环境
1.6 模块导入与常用标准模块
  1.6.1 模块及其导入方式
    方法1 直接使用dir(__builtins__)。
    方法2 先用import builtins加载builtins，然后用dir(builtins)。
  1.6.2 常用标准模块
1.7 使用帮助
  用dir()和help()查看模块、函数等相关说明。
1.8 程序文件中的乱码问题

2.1 控制台的基本输入与输出
  2.1.1 控制台的基本输入
    input()函数用于输入数据，无论用户输入什么内容，该函数都返回字符串类型。其格式如下：
      input(prompt = None, /)
  2.1.2 控制台的基本输出
    最简单的输出方式是使用print()函数。其格式如下：
      print(value, ..., sep = '', end = '\n', file = sys,stdout, flush = False)
2.2 标识符、变量与赋值语句
  2.2.1 标识符
    1.合法标识符：
      （1） 标识符的开头必须是字母或下划线；
      （2） 标识符不能以数字开头；
      （3） 标识符是区分大小写的；
      （4） 标识符不能使用关键字；
      （5） 最好不要使用内置模块名、类型名、函数名、已经导入的模块名机器成员名作为标识符，以免造成混淆。
    2.关键字
    3.下划线标识符
  2.2.2 变量
    变量是计算机语言中用来存储计算结果或表示值的抽象概念，或表示某个对象值的名字。可以通过变量名访问变量所指的对象。
  2.2.3 赋值语句
    复制的目的是将值与对应的名字进行关联。赋值语句的格式如下:
      <变量> = <表达式>


Python中NULL的用途：
  在Python中，None 是一个特殊的常量，表示“无”或“空”。它常用于表示变量未赋值或函数无返回值的情况。
  1. 表示空值：None 常用于初始化变量，表示该变量尚未被赋予有意义的值。
  2. 函数返回值：当函数没有显式返回值时，默认返回 None。
  3. 默认参数：None 常用作函数的默认参数，便于在函数内部进行条件判断。
  4. 占位符：None 可以作为占位符，表示某个值尚未确定。
  5. 比较与判断：使用 is 或 is not 来判断变量是否为 None，而不是 == 或 !=。
  6. 字典中的默认值：在字典中，None 可以作为键或值，表示无意义或未定义的状态。
  7. 类型：None 的类型是 NoneType，且它是唯一的。
